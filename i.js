const t={GRAVITY:2,JUMP_VELOCITY:-22,MAX_CANVAS_HEIGHT:760,MAX_VELOCITY_X:12,MAX_VELOCITY_Y:20,TARGET_FPS:60,init(){t.Input.init(),t.Renderer.init(()=>{t.Renderer.changeLevel(new t.Level.Intro),t.Renderer.mainLoop()})},overlap(t,s){let i=Math.min(t.x+t.w,s.x+s.w)-Math.max(t.x,s.x);i=i<0?0:i;let e=Math.min(t.y+t.h,s.y+s.h)-Math.max(t.y,s.y);return e=e<0?0:e,i*e>Number.EPSILON}};window.addEventListener("load",()=>t.init()),t.Input={ACTION:{PAUSE:1,JUMP:2,LEFT:10,UP:11,RIGHT:12,DOWN:13},PROMPTS:1,_gpButtons:{},_ignoreUntilReleased:{},_on:{gp_connect:[],gp_disconnect:[]},_onKeyDown:{},_onKeyUp:{},gamepads:{},isLinuxFirefox:!1,keystate:{},numGamepads:0,buildActionKeyMap(){this.ACTION_KEY_MAP={[this.ACTION.PAUSE]:{keyboard:["Escape"],gamepad:[9]},[this.ACTION.UP]:{keyboard:["ArrowUp","KeyW","KeyZ"],gamepad:[12]},[this.ACTION.LEFT]:{keyboard:["ArrowLeft","KeyA","KeyQ"],gamepad:[14]},[this.ACTION.DOWN]:{keyboard:["ArrowDown","KeyS"],gamepad:[13]},[this.ACTION.RIGHT]:{keyboard:["ArrowRight","KeyD"],gamepad:[15]},[this.ACTION.JUMP]:{keyboard:["Space"],gamepad:[0]}}},getDirections(){let t=0,s=0;if(this.isPressed(this.ACTION.LEFT)?t=-1:this.isPressed(this.ACTION.RIGHT)&&(t=1),this.isPressed(this.ACTION.UP)?s=-1:this.isPressed(this.ACTION.DOWN)&&(s=1),!t||!s){const i=.3;for(const e in this.gamepads){const h=this.gamepads[e];h.axes[0]&&Math.abs(h.axes[0])>i?t=h.axes[0]>0?1:-1:h.axes[2]&&Math.abs(h.axes[2])>i&&(t=h.axes[2]>0?1:-1),h.axes[1]&&Math.abs(h.axes[1])>i?s=h.axes[1]>0?1:-1:h.axes[3]&&Math.abs(h.axes[3])>i&&(s=h.axes[3]>0?1:-1)}}return{x:t,y:s}},getKeysForAction(t){return this.ACTION_KEY_MAP[t]},init(){const t=String(navigator.userAgent).toLowerCase();this.isLinuxFirefox=t.includes("linux")&&t.includes("firefox"),this.buildActionKeyMap(),this.registerEvents()},isPressed(t,s){const i=this.getKeysForAction(t);for(const t of i.keyboard)if(this.isPressedKey(t,s))return!0;for(const t of i.gamepad)if(this.isPressedGamepad(t,s))return!0;if(t===this.ACTION.LEFT)for(const t in this.gamepads){const i=this.gamepads[t];if(i.axes[6]&&i.axes[6]<=-.2)return!this._ignoreUntilReleased["axis6-"]&&(s&&(this._ignoreUntilReleased["axis6-"]=!0),!0)}else if(t===this.ACTION.RIGHT)for(const t in this.gamepads){const i=this.gamepads[t];if(i.axes[6]&&i.axes[6]>=.2)return!this._ignoreUntilReleased["axis6+"]&&(s&&(this._ignoreUntilReleased["axis6+"]=!0),!0)}else if(t===this.ACTION.UP||t===this.ACTION.JUMP)for(const t in this.gamepads){const i=this.gamepads[t];if(i.axes[7]&&i.axes[7]<=-.2)return!this._ignoreUntilReleased["axis7-"]&&(s&&(this._ignoreUntilReleased["axis7-"]=!0),!0)}else if(t===this.ACTION.DOWN)for(const t in this.gamepads){const i=this.gamepads[t];if(i.axes[7]&&i.axes[7]>=.2)return!this._ignoreUntilReleased["axis7+"]&&(s&&(this._ignoreUntilReleased["axis7+"]=!0),!0)}return!1},isPressedGamepad(t,s){for(const i in this.gamepads){const e=this.gamepads[i].buttons[t];if(e&&e.pressed)return!this._ignoreUntilReleased[t]&&(s&&(this._ignoreUntilReleased[t]=!0),!0)}return!1},isPressedKey(t,s){const i=this.keystate[t];return!(!i||!i.time)&&(s&&(i.time=0,i.waitForReset=!0),!0)},off(t,s){if("function"!=typeof s)return void(this._on[t]=[]);const i=this._on[t].indexOf(s);i>=0&&this._on[t].splice(i,1)},on(t,s){this._on[t].push(s)},onKeyDown(t,s){const i=this._onKeyDown[t]||[];i.push(s),this._onKeyDown[t]=i},onKeyUp(t,s){const i=this._onKeyUp[t]||[];i.push(s),this._onKeyUp[t]=i},registerEvents(){document.body.onkeydown=t=>{const s=this.keystate[t.code];s&&s.waitForReset||(this.keystate[t.code]={time:Date.now()},this._onKeyDown[t.code]&&this._onKeyDown[t.code].forEach(t=>t())),"Digit1"===t.code?this.PROMPTS=1:"Digit2"===t.code?this.PROMPTS=2:"Digit3"===t.code&&(this.PROMPTS=3)},document.body.onkeyup=t=>{this.keystate[t.code]={time:0},this._onKeyUp[t.code]&&this._onKeyUp[t.code].forEach(t=>t())},window.addEventListener("gamepadconnected",t=>{const s=String(t.gamepad.id).toLowerCase();s.includes("sony")||s.includes("dualshock")||s.includes("playstation")||s.includes("ps3")?this.PROMPTS=2:(s.includes("xbox")||s.includes("microsoft"))&&(this.PROMPTS=3),this.numGamepads++,this.gamepads[t.gamepad.index]=t.gamepad,this._on.gp_connect.forEach(t=>t())}),window.addEventListener("gamepaddisconnected",t=>{this.PROMPTS=1,this.numGamepads--,delete this.gamepads[t.gamepad.index],this._on.gp_disconnect.forEach(t=>t())})},update(){const t=navigator.getGamepads();for(const s of t)if(s){this.gamepads[s.index]=s;for(const t in this._ignoreUntilReleased)"axis6-"===t||"axis6+"===t?s.axes[6]||delete this._ignoreUntilReleased[t]:"axis7-"===t||"axis7+"===t?s.axes[7]||delete this._ignoreUntilReleased[t]:s.buttons[t]&&!s.buttons[t].pressed&&delete this._ignoreUntilReleased[t]}}};{class s{constructor(){this.objects=[],this.effects=[],this.scenery=[],this.limits=[0,1/0],this.timer=0}checkGoal(){if(!this.goal||this.state>0)return;const s={x:this.goal[0],y:this.goal[1],w:this.goal[2],h:this.goal[3]};t.overlap(this.player,s)&&(this.state=1,this.onGoal())}collisionDetection(t,s){const i={x:t.x,y:t.y},e={x:s.x,y:s.y},h={x:e.x,y:e.y};let a=Math.min(i.x,e.x),l=Math.max(i.x,e.x)+t.w,n=Math.min(i.y,e.y),r=Math.max(i.y,e.y)+t.h;const o=i.x+t.w,d=i.y+t.h,c=t.blocks;for(let s=0;s<this.objects.length;s++){const x=this.objects[s];if(x===t||!x.collision||x.gone)continue;let f=x.x,p=f+x.w,y=x.y,u=y+x.h;const m=y>n&&y<r;(u>n&&u<r||m)&&(f<o&&p>=o||f<=i.x&&p>i.x||f>=i.x&&p<=o)&&(m?i.y<h.y&&(c.b=x,h.y=y-t.h):i.y>h.y&&(c.t=x,h.y=u),e.y=h.y,n=Math.min(i.y,e.y),r=Math.max(i.y,e.y)+t.h);let w=f>a&&f<l;(p>a&&p<l||w)&&(y<d&&u>=d||y<=i.y&&u>i.y||y>=i.y&&u<=d)&&(w?i.x<h.x&&(c.r=x,h.x=f-t.w):i.x>h.x&&(c.l=x,h.x=p),e.x=h.x,a=Math.min(i.x,e.x),l=Math.max(i.x,e.x)+t.w)}if(c.b){const s=c.b,i=s.y-h.y-t.h;(s.gone||Math.abs(i)>=1||s.x>h.x+t.w||h.x>s.x+s.w)&&(c.b=null)}if(c.t){const s=c.t,i=s.y+s.h-h.y;(s.gone||Math.abs(i)>=1||s.x>h.x+t.w||h.x>s.x+s.w)&&(c.t=null)}if(c.l){const s=c.l,i=s.x+s.w-h.x;(s.gone||Math.abs(i)>=1||s.y>h.y+t.h||h.y>s.y+s.h)&&(c.l=null)}if(c.r){const s=c.r,i=s.x-h.x-t.w;(s.gone||Math.abs(i)>=1||s.y>h.y+t.h||h.y>s.y+s.h)&&(c.r=null)}t.x=h.x,t.y=h.y}draw(s){const i=t.Renderer.cnv.width,e=t.Renderer.cnv.height,h=Math.round(i/2),a=Math.min(this.limits[0],Math.max(-this.limits[1],h-this.player.x));s.setTransform(1,0,0,1,a,0);const l=e-752;let n=Math.ceil(i/1504)+1;const r=Math.floor(-a/1504);for(;n-- >=0;)s.drawImage(t.Renderer.sprite_m,0,0,32,16,1504*(r+n),l,1504,752);this.scenery.forEach(t=>this.drawIfVisible(s,-a,i,t)),this.objects.forEach(t=>this.drawIfVisible(s,-a,i,t)),this.effects.forEach(t=>this.drawIfVisible(s,-a,i,t)),this.player&&this.player.draw(s),this.drawGoal(s,-a,i),s.setTransform(1,0,0,1,0,0)}drawGoal(t,s,i){if(!this.goal)return;const e=this.goal[0],h=this.goal[2];e>s+i||e+h<s||(t.fillStyle="#8BBADCA0",t.fillRect(e,this.goal[1],h,this.goal[3]))}drawIfVisible(t,s,i,e){e.x>s+i||e.xe<s||e.draw(t)}resetToCheckPoint(){if(!this.checkPoint)return;const t=this.checkPoint,s=this.player;s.x=t.x+Math.round(t.w-s.w)/2,s.y=t.y-s.h-1,s.nextPos.x=s.x,s.nextPos.y=s.y,s.velX=0,s.velY=0,this.objects.forEach(t=>{t.crumbleProgress=0,t.gone=!1,t.isCrumbling=0}),this.effects=[]}setCheckPoint(t){t&&2===t.type&&(this.checkPoint=t)}spawnEffect(s,i){const e=new t.LevelEffect(this,s,i);this.effects.push(e)}update(s){if(this.timer+=s,this.state>0)return;this.objects.forEach(t=>t.update(s)),this.scenery.forEach(t=>t.update(s)),this.effects.forEach(t=>t.update(s));const i=t.Input.getDirections();if(this.player.update(s,i),this.player.nextPos.x<=this.limits[0]&&(this.player.nextPos.x=this.limits[0],this.player.isWalking=!1),this.collisionDetection(this.player,this.player.nextPos),this.player.y>t.MAX_CANVAS_HEIGHT+100||this.player.isOnSpikes())return void this.resetToCheckPoint();const e=this.player.blocks;this.player.isOnGround&&e.b&&(this.setCheckPoint(e.b),e.b.crumble()),this.player.isOnWall&&(e.l&&e.l.crumble(),e.r&&e.r.crumble()),this.checkGoal()}}t.Level=s}{class s{constructor(t,s,i){this.data=i,this.level=t,this.timer=0,this.startTime=0,this.endTime=1/0,this._init(s)}_drawCrumbling(t){if(this.timer<this.startTime)return;const s=this.data,i=(this.timer-this.startTime)/(this.endTime-this.startTime),e=i*i,h=t.globalAlpha,a=Math.round(s.w/2);t.globalAlpha=1-e,t.fillStyle="#a2a2a2";const l=8*(1-i),n=10*Math.sin(4*i*Math.PI);let r=s.x-l/2;t.fillRect(Math.round(r+n),s.y-Math.round(40*i),l,l),r+=a,t.fillRect(Math.round(r+n),s.y-Math.round(40*i),l,l),r+=a,t.fillRect(Math.round(r+n),s.y-Math.round(40*i),l,l);const o=s.y+500*e,d=s.y+600*e;t.globalAlpha=1-e,t.drawImage(s.cnv,0,0,a,s.h,s.x,o,a,s.h),t.drawImage(s.cnv,a,0,a,s.h,s.x+a,d,a,s.h),t.globalAlpha=h}_drawGoal(t){}_drawHangDust(t){}_drawJumpDust(t){let s=this.timer/this.endTime;const i=t.globalAlpha;t.globalAlpha=1-s*s;let e=Math.round(14*s),h=Math.round(e/2);t.fillStyle="#e4bd8a",t.fillRect(this.data.x-h,this.data.y-h,e,e),s>.3&&(s=(s-.3)/.7,e=Math.round(10*s),h=Math.round(e/2),t.fillStyle="#ffffff50",t.fillRect(this.data.x-h+10*this.data.dir,this.data.y-h,e,e)),t.globalAlpha=i}_init(s){1===s?(this.draw=this._drawCrumbling,this.startTime=1*t.TARGET_FPS,this.endTime=2*t.TARGET_FPS,this.x=this.data.x-10,this.xe=this.data.xe+10):2===s?(this.draw=this._drawJumpDust,this.endTime=1*t.TARGET_FPS,this.x=this.data.x-40,this.xe=this.x+100):3===s?(this.draw=this._drawHangDust,this.endTime=4*t.TARGET_FPS,this.x=this.data.x-40,this.xe=this.x+100):4===s&&(this.draw=this._drawGoal,this.x=this.data.x,this.xe=this.x+this.data.w)}update(t){if(this.timer+=t,this.timer>=this.endTime){const t=this.level.effects.indexOf(this);t>=0&&this.level.effects.splice(t,1)}}}t.LevelEffect=s}{class s{constructor(s,i){this.type=i.t||0,0===this.type?this.top="#70a030":2===this.type&&(this.color="#f0f0f0"),this.color=i.color||this.color||"#404047",this.spikes={},i.spikes&&(this.spikes.l=i.spikes.includes("l"),this.spikes.r=i.spikes.includes("r"),this.spikes.t=i.spikes.includes("t")),this.x=0,this.y=0,this.w=i.w||0,this.h=i.h||0;let e=this.h,h=this.w;this.spikes.t&&(e+=8),this.spikes.l&&(h+=8),this.spikes.r&&(h+=8),this.velX=0,this.velY=0,this.blocks={},this.collision=!0,this.level=s,this.type>=0&&(this.cnv=t.Renderer.toOffscreenCanvas(this,e,h)),this.x=i.x||0,this.y=i.y||0,this.xe=this.x+this.w,this.ye=this.y+this.h,this.nextPos={x:this.x,y:this.y}}crumble(){0!==this.type&&1!==this.type||this.isCrumbling||(this.isCrumbling=this.level.timer,this.level.spawnEffect(1,this))}draw(s){if(this.gone)return;const i=this.crumbleProgress||0;let e=this.x,h=this.y;if(i>.5&&(e+=Math.round(4*Math.random()-2),h+=Math.round(4*Math.random()-2)),this.cnv)s.drawImage(this.cnv,e,h);else{if(this.spikes.t&&(h+=8),this.spikes.l&&(e+=8),s.fillStyle=this.color,s.fillRect(e,h,this.w,this.h),0===this.type){const i=s.createPattern(t.Renderer.sprite_s,"repeat");s.fillStyle=i;let a=0,l=0;if(this.spikes.t&&(l+=8),this.spikes.l&&(a+=8),s.translate(a,l),s.fillRect(e-a,h-l,this.w,this.h),s.translate(-a,-l),s.strokeStyle="#838383",s.lineWidth=4,s.strokeRect(e+2,h+2,this.w-4,this.h-4),s.fillStyle="#fff",this.spikes.t){this.top=null;const t=this.w/4;for(let i=0;i<t;i+=2){const t=e+4*i;s.beginPath(),s.moveTo(t,h),s.lineTo(t+8,h),s.lineTo(t+4,h-8),s.fill()}}if(this.spikes.l){const t=this.h/4;for(let i=0;i<t;i+=2){const t=h+4*i;s.beginPath(),s.moveTo(e,t),s.lineTo(e,t+8),s.lineTo(e-8,t+4),s.fill()}}if(this.spikes.r){const t=this.w,i=this.h/4;for(let a=0;a<i;a+=2){const i=h+4*a+8;s.beginPath(),s.moveTo(e+t,i),s.lineTo(e+t,i-8),s.lineTo(e+t+8,i-4),s.fill()}}}else 2===this.type&&(h+=12,s.fillStyle="#e0e0e0",s.fillRect(e+8,h,6,this.h),s.fillRect(e+22,h,6,this.h),s.fillRect(e+36,h,6,this.h),s.fillRect(e+this.w-14,h,6,this.h),s.fillRect(e+this.w-28,h,6,this.h),s.fillRect(e+this.w-42,h,6,this.h));if(this.top){s.fillStyle=this.top,s.fillRect(e,h,this.w,4);for(let t=0;t<this.w/16;t++)s.fillRect(e+16*t,h+4,8,4)}}}update(s){if(this.isCrumbling&&!this.gone){const s=this.level.timer-this.isCrumbling;this.crumbleProgress=s/(1*t.TARGET_FPS),this.crumbleProgress>=1&&(this.crumbleProgress=1,this.gone=!0)}}}t.LevelObject=s}{class s extends t.LevelObject{constructor(t,s,i,e){super(t,{x:s,y:i,w:6*e,h:8*e,t:-1}),this.size=e,this.dirX=1,this.dirY=0,this.eyeBlink=0,this.frameX=0,this.lastOnGround=0}_updateDirection(t){t.x&&(this.dirX=t.x<0?-1:1),this.dirY=t.y>0?1:0}_updateFrameState(t,s){s&&!this.isJumpingUp()?this.frameX+=.2*t:this.frameX=0}_updateStates(t){this.isOnGround&&(this.lastOnGround=this.level.timer),this.isOnGround=!!this.blocks.b,this.isWalking=this.isOnGround&&t.x,this.isOnGround||!this.blocks.l&&!this.blocks.r?this.isOnWall=0:this.isOnWall||(this.isOnWall=this.level.timer)}_updateVelocity(s,i){if(this.isOnWall)return this.velX=0,void(this.level.timer-this.isOnWall>t.TARGET_FPS?this.velY=Math.min(this.velY+s*t.GRAVITY/8,t.MAX_VELOCITY_Y/4):i.y<0?this.velY=-1.25:this.velY=0);this.isOnGround||(this.velY=Math.min(this.velY+s*t.GRAVITY,t.MAX_VELOCITY_Y)),this.isWalking||this.isFallingDown()||this.isJumpingUp()?i.x>0?this.velX=Math.min(this.velX+2*s,t.MAX_VELOCITY_X):i.x<0&&(this.velX=Math.max(this.velX-2*s,-t.MAX_VELOCITY_X)):this.velX=0}canJump(){return this.isOnGround||this.isOnWall||this.level.timer-this.lastOnGround<2}draw(s){const i=this.size,e=i+i,h=e+i,a=h+e,l=h+h;let n=0;this.isOnGround&&!this.isOnWall&&(n=Math.round((Math.sin(.05*this.level.timer)+1)*i*.1));let r=this.dirX<0;this.isOnWall&&(r=!!this.blocks.r);let o=!0;const d=this.dirY>0?i:0,c=r?i:h,x=this.level.timer-this.eyeBlink;x<.1*t.TARGET_FPS?o=!1:x>=6*t.TARGET_FPS&&(this.eyeBlink=this.level.timer),s.fillStyle="#df7126",s.fillRect(this.x,this.y+n,l,l),r?this.isWalking?~~this.frameX%2?(s.fillRect(this.x+a,this.y+l,i,e),s.fillRect(this.x+e,this.y+l,i,i)):(s.fillRect(this.x+a,this.y+l,i,i),s.fillRect(this.x+e,this.y+l,i,e)):this.isOnWall?s.fillRect(this.x+a,this.y+l,i,e):(s.fillRect(this.x+a,this.y+l,i,e),s.fillRect(this.x+e,this.y+l,i,e)):this.isWalking?~~this.frameX%2?(s.fillRect(this.x,this.y+l,i,i),s.fillRect(this.x+h,this.y+l,i,e)):(s.fillRect(this.x,this.y+l,i,e),s.fillRect(this.x+h,this.y+l,i,i)):this.isOnWall?s.fillRect(this.x,this.y+l,i,e):(s.fillRect(this.x,this.y+l,i,e),s.fillRect(this.x+h,this.y+l,i,e)),o&&(s.fillStyle="#fff",s.fillRect(this.x+c,this.y+i+d+n,e,e))}isFallingDown(){return!this.isOnGround&&!this.isOnWall&&this.velY>0}isJumpingUp(){return!this.isOnGround&&!this.isOnWall&&this.velY<0}isOnSpikes(){return!(!this.isOnGround&&!this.isOnWall)&&(!(!this.blocks.b||!this.blocks.b.spikes.t)||(!(!this.blocks.r||!this.blocks.r.spikes.l)||!(!this.blocks.l||!this.blocks.l.spikes.r)))}jump(){this.isOnWall?(this.blocks.l?(this.velX-=t.JUMP_VELOCITY/2,this.dirX=1):this.blocks.r&&(this.velX+=t.JUMP_VELOCITY/2,this.dirX=-1),this.level.spawnEffect(2,{x:this.x+(this.dirX<0?this.w:0),y:this.y,dir:this.dirX})):this.level.spawnEffect(2,{x:this.x+(this.dirX<0?this.w:0),y:this.y+this.h,dir:this.dirX}),this.velY=t.JUMP_VELOCITY,this.isOnGround=!1,this.isOnWall=0,this.lastOnGround=0}update(s,i){this._updateStates(i),this._updateDirection(i),this._updateVelocity(s,i),this._updateFrameState(s,i.x),this.canJump()&&t.Input.isPressed(t.Input.ACTION.JUMP,!0)&&this.jump(),this.nextPos.x=this.x+Math.round(s*this.velX),this.nextPos.y=this.y+Math.round(s*this.velY)}}t.Character=s}{class s extends t.Level{constructor(){super(),this.hasStarted=!1,this.player=new t.Character(this,224,0,3),this.player.y=600-this.player.h,this.player.isOnGround=!0;[{x:-128,y:600,w:384,h:300,t:2},{x:256,y:600,w:128,h:64},{x:380,y:600,w:128,h:64},{x:504,y:600,w:128,h:64},{x:628,y:600,w:128,h:64},{x:752,y:600,w:128,h:64},{x:876,y:600,w:128,h:64},{x:1e3,y:600,w:128,h:64},{x:1320,y:600,w:128,h:64},{x:1640,y:600,w:128,h:64},{x:1960,y:600,w:128,h:64},{x:2280,y:600,w:128,h:64},{x:2600,y:536,w:128,h:300,t:2},{x:2920,y:600,w:384,h:64},{x:3300,y:408,w:64,h:256},{x:3300,y:216,w:64,h:192},{x:3040,y:32,w:64,h:192,spikes:"l"},{x:3040,y:272,w:64,h:128,spikes:"l"},{x:3300,y:152,w:256,h:64},{x:3684,y:152,w:64,h:64},{x:3748,y:152,w:192,h:1e3,t:2},{x:4004,y:500,w:128,h:64},{x:4200,y:200,w:64,h:320,spikes:"t"},{x:4200,y:-500,w:64,h:704,spikes:"t"},{x:4200,y:528,w:64,h:320},{x:4392,y:500,w:128,h:64},{x:4584,y:400,w:128,h:64},{x:4648,y:100,w:128,h:128},{x:4844,y:500,w:64,h:64},{x:4904,y:-500,w:64,h:1408,spikes:"t"},{x:5192,y:564,w:64,h:64},{x:5320,y:500,w:256,h:64},{x:5640,y:436,w:256,h:64},{x:5960,y:372,w:192,h:600,t:2},{x:6216,y:436,w:256,h:64},{x:6468,y:436,w:256,h:64},{x:6720,y:436,w:256,h:64},{x:6720,y:-64,w:128,h:320,spikes:"l"},{x:6972,y:436,w:256,h:64},{x:7676,y:320,w:192,h:600,t:2},{x:7612,y:t.MAX_CANVAS_HEIGHT-64,w:64,h:64}].forEach(s=>{const i=new t.LevelObject(this,s);this.objects.push(i)}),this.goal=[7848,0,20,320],this.limits=[0,7868-t.Renderer.cnv.width]}draw(s){if(super.draw(s),!this.hasStarted){const i=t.Renderer.centerX,e=t.Renderer.centerY;s.fillStyle="#fff",s.font="bold 92px Arial, sans-serif",s.textAlign="center",s.textBaseline="alphabetic",t.Renderer.setShadowText(8),s.fillText("AND THEN IT WAS GONE",i,e),t.Renderer.resetShadow(),~~this.timer%200>30&&(s.font="36px Arial, sans-serif",s.fillText("Press [Space] to start",i,e+58)),s.textBaseline="top",t.Input.numGamepads>0?(s.font="bold 20px Arial, sans-serif",s.fillText("Gamepad connected!",i,24)):(s.font="italic 20px Arial, sans-serif",s.fillText("No gamepad connected",i,24))}}onGoal(){t.Renderer.changeLevel(new t.Level.Outro)}update(s){this.hasStarted?super.update(s):(this.timer+=s,t.Input.isPressed(t.Input.ACTION.JUMP,!0)&&(this.hasStarted=!0))}}t.Level.Intro=s}{class s extends t.Level{constructor(){super(),this._hideWorld=0,this._textW=0,this.phase=1}draw(s){const i=t.Renderer.cnv.width,e=t.Renderer.cnv.height,h=Math.min(1,this.timer/(8*t.TARGET_FPS)),a=s.globalAlpha;if(s.globalAlpha=h,s.fillStyle="#000",s.fillRect(0,0,i,e),s.globalAlpha=a,1===this.phase)this.drawPlayer(s,h,e);else if(2===this.phase){s.fillStyle="#df7126",s.font="bold 128px Arial, sans-serif",s.textAlign="right",t.Renderer.setShadowText(10,"#a2a2a2");let i="WORLD NOT FOUND";if(!this._textW){const t=s.measureText(i);this._textW=t.width}this._hideWorld>this.timer&&(i="NOT FOUND"),s.fillText(i,t.Renderer.centerX+Math.round(this._textW/2),t.Renderer.centerY),t.Renderer.resetShadow()}}drawPlayer(s,i,e){const h=1-i,a=10*h,l=a+a,n=l+a,r=l+l,o=n+l,d=n+n,c=s.globalAlpha,x=e+d+r+100;s.globalAlpha=1-i,s.translate(t.Renderer.centerX-n,Math.round(x*h)-d-r),s.rotate(360*i*Math.PI/180),s.translate(-r,-r),s.fillStyle="#df7126",s.fillRect(0,0,d,d),s.fillRect(o,d,a,l),s.fillRect(l,d,a,l),s.globalAlpha=c,s.fillStyle="#fff",s.fillRect(a,a,l,l),s.setTransform(1,0,0,1,0,0)}update(s){this.timer+=s,this.timer>=9*t.TARGET_FPS&&(this.phase=2,this.timer>=9.5*t.TARGET_FPS&&this._hideWorld<this.timer&&Math.random()<.02&&(this._hideWorld=this.timer+t.TARGET_FPS*Math.random()))}}t.Level.Outro=s}t.Renderer={cnv:null,ctx:null,last:0,level:null,sprite_m:null,sprite_s:null,changeLevel(t){this.level=t},clear(){this.ctx.fillStyle="#3e4968",this.ctx.fillRect(0,0,this.cnv.width,this.cnv.height)},draw(){this.clear(),this.level&&this.level.draw(this.ctx)},drawPause(){this.ctx.fillStyle="#111",this.ctx.fillRect(0,0,this.cnv.width,this.cnv.height),this.setShadowText(),this.ctx.fillStyle="#a2a2a2",this.ctx.font="bold 128px Arial, sans-serif",this.ctx.textAlign="center",this.ctx.fillText("PAUSED",this.centerX,this.centerY),this.resetShadow(),this.ctx.fillStyle="#808080",this.ctx.font="48px Arial, sans-serif",this.ctx.fillText("Press [Esc] to continue.",this.centerX,this.centerY+80)},init(t){this.cnv=document.getElementById("c"),this.ctx=this.cnv.getContext("2d",{alpha:!1}),this.ctx.imageSmoothingEnabled=!1,this.registerEvents(),this.loadSprite(t)},loadSprite(t){let s=0;const i=new Image;i.onload=()=>{this.sprite_m=i,2==++s&&t()},i.src="m.gif";const e=new Image;e.onload=()=>{this.sprite_s=e,2==++s&&t()},e.src="s.gif"},mainLoop(s=0){if(t.Input.update(),s&&this.last){const i=(s-this.last)/(1e3/t.TARGET_FPS);if(this.ctx.imageSmoothingEnabled=!1,this.ctx.lineWidth=1,this.ctx.textBaseline="alphabetic",this.ctx.setTransform(1,0,0,1,0,0),this.isPaused)return void this.drawPause();this.level&&this.level.update(i),this.draw(i)}this.last=s,requestAnimationFrame(t=>this.mainLoop(t))},pause(){this.isPaused=!0},registerEvents(){window.addEventListener("resize",t=>this.resize(t)),this.resize();const s=t.Input.getKeysForAction(t.Input.ACTION.PAUSE);setInterval(()=>{this.isPaused&&t.Input.update(),s.gamepad.forEach(s=>{t.Input.isPressedGamepad(s,!0)&&this.togglePause()})},100);const i=()=>this.togglePause();s.keyboard.forEach(s=>t.Input.onKeyUp(s,i)),t.Input.on("gp_disconnect",()=>this.pause())},resetShadow(){this.ctx.shadowColor="#00000000"},resize(s){s&&this.pause(),this.cnv.height=Math.min(window.innerHeight,t.MAX_CANVAS_HEIGHT),this.cnv.width=window.innerWidth,this.centerX=Math.round(this.cnv.width/2),this.centerY=Math.round(this.cnv.height/2),this.isPaused&&(clearTimeout(this._timeoutDrawPause),this._timeoutDrawPause=setTimeout(()=>this.drawPause(),100))},setShadowText(t=10,s="#df7126"){this.ctx.shadowOffsetX=t,this.ctx.shadowBlur=0,this.ctx.shadowColor=s},togglePause(){this.isPaused?this.unpause():this.pause()},toOffscreenCanvas(t,s,i){const e=document.createElement("canvas");e.width=i||t.w,e.height=s||t.h;const h=e.getContext("2d");return h.imageSmoothingEnabled=!1,t.draw(h),e},unpause(){this.isPaused&&(this.isPaused=!1,this.mainLoop())}},t.UI={};